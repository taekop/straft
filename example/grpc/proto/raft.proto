syntax = "proto3";

package raft;

message Entry {
  optional uint64 index = 1;
  optional uint64 term = 2;
  oneof command {
    Empty empty = 3;
    string write = 4;
    ChangeMembership change_membership = 5;
  }
}

message Empty {}

message ChangeMembership {
    repeated string members = 1;
}

message AppendEntriesRequest {
    optional uint64 term = 1;
    optional string leader_id = 2;
    optional uint64 prev_log_index = 3;
    optional uint64 prev_log_term = 4;
    repeated Entry entries = 5;
    optional uint64 leader_commit = 6;
}

message AppendEntriesResponse {
  optional uint64 term = 1;
  optional bool success = 2;
}

message RequestVoteRequest {
    optional uint64 term = 1;
    optional string candidate_id = 2;
    optional uint64 last_log_index = 3;
    optional uint64 last_log_term = 4;
}

message RequestVoteResponse {
    optional uint64 term = 1;
    optional bool vote_granted = 2;
}

message ChangeMembershipRequest {
    repeated string members = 1;
}

message ChangeMembershipResponse {
    optional string message = 1;
    optional bool success = 2;
    optional string leader_id = 3;
}

message WriteRequest {
    optional string command = 1;
}

message WriteResponse {
    optional string message = 1;
    optional bool success = 2;
    optional string leader_id = 3;
}

message ReadRequest {
    optional string command = 1;
}

message ReadResponse {
    optional string message = 1;
    optional bool success = 2;
    optional string leader_id = 3;
}

service Raft {
    rpc AppendEntries(AppendEntriesRequest) returns(AppendEntriesResponse) {}
    rpc RequestVote(RequestVoteRequest) returns(RequestVoteResponse) {}
    rpc ChangeMembership(ChangeMembershipRequest) returns(ChangeMembershipResponse) {}
    rpc Write(WriteRequest) returns(WriteResponse) {}
    rpc Read(ReadRequest) returns(ReadResponse) {}
}
